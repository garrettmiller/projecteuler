#!/usr/bin/python3
#Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

#NOTE - really slow, but returning the right result

pentagonList = []
existingD = 999999999999 #Arbitrarily large number which most of our distances should be less than

#Build a list of pentagonal numbers
for n in range(1,10000):
    pentagonList.append(int(n*((3*n)-1)/2))

for pj in pentagonList:
    for pk in pentagonList:
        if (pj + pk) in pentagonList:
            d = abs(pk - pj)
            if d in pentagonList:
                if d < existingD:
                    print(f"New smallest D found between {pj} and {pk}, with difference {d}")
                    existingD = d

print(f"Smallest D between two pentagonal numbers who also have pentagonal sum/difference is: {existingD}")